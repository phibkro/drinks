stages:
  - build
  - test
  - deploy

default:
  image: node

variables:
  ENVIRONMENTS: /^(main|dev)/

.standard_rules:
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event'"
    - if: "$CI_COMMIT_BRANCH =~ $ENVIRONMENTS"

# build stage
build-job:
  stage: build
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
  script:
    - cd app
    - npm install
    - npm run build
  artifacts:
    paths:
      - app/dist/

# test stage
lint:
  stage: test
  extends: .standard_rules
  needs: []
  dependencies: []
  script:
    - cd app
    - npm install
    - npm run lint

test-components:
  stage: test
  extends: .standard_rules
  image: cypress/base
  needs: []
  dependencies: []
  script:
    - cd app
    - npm install
    - npm run test-components
  allow_failure: true

test-e2e:
  stage: test
  extends: .standard_rules
  image: cypress/base
  needs: []
  dependencies: []
  script:
    - cd app
    - npm install
    - npm run test-e2e
  allow_failure: true

# deploy stage
pages:
  stage: deploy
  image: node
  rules:
    # only deploy to pages if branch name is "main" or "dev"
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
  needs:
    - job: build-job
  cache:
    # Keep previous builds
    paths:
      - public
  script:
    # deploy to branch name
    - mkdir public
    - mv app/dist public/
  artifacts:
    paths:
      - "public/"
  environment:
    name: production
